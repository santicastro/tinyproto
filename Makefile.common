default: all
DESTDIR ?=
BLD ?= bld
CONFIG_ENABLE_FCS32 ?= y
CONFIG_ENABLE_FCS16 ?= y
CONFIG_ENABLE_CHECKSUM ?= y
LOG_LEVEL ?=
ifeq ($(ENABLE_LOGS),y)
    ENABLE_HDLC_LOGS ?= y
    ENABLE_HD_LOGS ?= y
    ENABLE_FD_LOGS ?= y
endif

VERSION=0.8.0

CPPFLAGS += -I./src

CFLAGS += -std=gnu99
CPPFLAGS += -g -Os -Wall -Werror -ffunction-sections -fdata-sections $(EXTRA_CPPFLAGS)
CXXFLAGS += -std=c++11

ifneq ($(LOG_LEVEL),)
    CPPFLAGS += -DTINY_LOG_LEVEL_DEFAULT=$(LOG_LEVEL)
endif

ifeq ($(ENABLE_HDLC_LOGS),y)
    CPPFLAGS += -DTINY_HDLC_DEBUG=1
    ENABLE_DEBUG=y
endif
ifeq ($(ENABLE_HD_LOGS),y)
    CPPFLAGS += -DTINY_HD_DEBUG=1
    ENABLE_DEBUG=y
endif
ifeq ($(ENABLE_FD_LOGS),y)
    CPPFLAGS += -DTINY_FD_DEBUG=1
    ENABLE_DEBUG=y
endif
ifeq ($(ENABLE_DEBUG),y)
    CPPFLAGS += -DTINY_DEBUG=1
endif
ifeq ($(CONFIG_ENABLE_FCS32),y)
    CPPFLAGS += -DCONFIG_ENABLE_FCS32
endif

ifeq ($(CONFIG_ENABLE_FCS16),y)
    CPPFLAGS += -DCONFIG_ENABLE_FCS16
endif

ifeq ($(CONFIG_ENABLE_CHECKSUM),y)
    CPPFLAGS += -DCONFIG_ENABLE_CHECKSUM
endif

ifeq ($(CONFIG_ENABLE_STATS),y)
    CPPFLAGS += -DCONFIG_ENABLE_STATS
endif

.PHONY: clean library all install docs release

####################### Compiling library #########################

TARGET_LIB = libtinyprotocol.a

OBJ_LIB += \
        src/proto/crc/crc.o \
        src/proto/light/tiny_light.o \
        src/proto/hdlc/tiny_hdlc.o \
        src/proto/fd/tiny_fd.o \
        src/proto/half_duplex/tiny_hd.o \
        src/proto/hal/tiny_list.o \
        src/proto/hal/tiny_types.o \
        src/proto/half_duplex/tiny_rq_pool.o \
        src/TinyProtocolHd.o \
        src/TinyProtocolFd.o \
	src/TinyLightProtocol.o \

library: $(OBJ_LIB)
	mkdir -p $(BLD)
	$(AR) rcs $(BLD)/$(TARGET_LIB) $^

install:
	cp -r $(BLD)/$(TARGET_LIB) $(DESTDIR)/usr/lib/
	cp -rf ./include/*.h $(DESTDIR)/usr/include/

docs:
	doxygen doxygen.cfg

all: library

clean:
	rm -rf $(BLD)
	rm -rf $(OBJ_LIB) $(OBJ_LIB:.o=.gcno) $(OBJ_LIB:.o=.gcda)
	rm -rf gmon.out
